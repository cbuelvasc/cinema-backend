basePath: /api/cinema/v1
definitions:
  handler.APIError:
    properties:
      message:
        type: string
      path:
        type: string
      status:
        type: integer
      timestamp:
        type: integer
    type: object
  model.City:
    properties:
      cinemas:
        items:
          type: string
        type: array
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      stateId:
        type: string
      updated_at:
        type: string
    required:
    - cinemas
    - name
    - stateId
    type: object
  model.CityInput:
    properties:
      cinemas:
        items:
          type: string
        type: array
      created_at:
        type: string
      name:
        type: string
      stateId:
        type: string
      updated_at:
        type: string
    required:
    - cinemas
    - name
    - stateId
    type: object
  model.Country:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      states:
        items:
          type: string
        type: array
      updated_at:
        type: string
    required:
    - name
    type: object
  model.CountryInput:
    properties:
      created_at:
        type: string
      name:
        type: string
      states:
        items:
          type: string
        type: array
      updated_at:
        type: string
    required:
    - name
    type: object
  model.Movie:
    properties:
      created_at:
        type: string
      format:
        type: string
      id:
        type: string
      releaseDay:
        type: integer
      releaseMonth:
        type: integer
      releaseYear:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    required:
    - format
    - title
    type: object
  model.MovieInput:
    properties:
      created_at:
        type: string
      format:
        type: string
      releaseDay:
        type: integer
      releaseMonth:
        type: integer
      releaseYear:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    required:
    - format
    - title
    type: object
  model.SignInInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  model.State:
    properties:
      cities:
        items:
          type: string
        type: array
      countryId:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    required:
    - countryId
    - name
    type: object
  model.StateInput:
    properties:
      cities:
        items:
          type: string
        type: array
      countryId:
        type: string
      created_at:
        type: string
      name:
        type: string
      updated_at:
        type: string
    required:
    - countryId
    - name
    type: object
  model.Tweet:
    properties:
      created_at:
        type: string
      id:
        type: string
      message:
        type: string
      updated_at:
        type: string
      userId:
        type: string
    required:
    - message
    - userId
    type: object
  model.TweetInput:
    properties:
      created_at:
        type: string
      message:
        type: string
      updated_at:
        type: string
      userId:
        type: string
    required:
    - message
    - userId
    type: object
  model.User:
    properties:
      avatar:
        type: string
      banner:
        type: string
      biography:
        type: string
      birthDate:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      lastname:
        type: string
      location:
        type: string
      name:
        type: string
      password:
        type: string
      updated_at:
        type: string
      webSite:
        type: string
    required:
    - email
    - lastname
    - name
    type: object
  model.UserInput:
    properties:
      avatar:
        type: string
      banner:
        type: string
      biography:
        type: string
      birthDate:
        type: string
      created_at:
        type: string
      email:
        type: string
      lastname:
        type: string
      location:
        type: string
      name:
        type: string
      password:
        type: string
      updated_at:
        type: string
      webSite:
        type: string
    required:
    - email
    - lastname
    - name
    type: object
info:
  contact: {}
  description: Provides access to the core features of Cinema REST API
  license:
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Cinema REST API
  version: "1.0"
paths:
  /cities:
    get:
      consumes:
      - application/json
      - text/xml
      description: Get all cities items
      parameters:
      - description: mediaType
        enum:
        - xml
        - json
        in: query
        name: mediaType
        type: string
      - description: page
        in: query
        minimum: 1
        name: page
        type: integer
      - description: size
        in: query
        minimum: 1
        name: limit
        type: integer
      - description: stateId
        in: query
        name: stateId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.City'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get all cities
      tags:
      - cities
    post:
      consumes:
      - application/json
      - text/xml
      description: Create a new city item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: New City
        in: body
        name: City
        required: true
        schema:
          $ref: '#/definitions/model.CityInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.City'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.APIError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Create a City
      tags:
      - cities
  /cities/{id}:
    delete:
      consumes:
      - application/json
      - text/xml
      description: Delete a city item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: City ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/model.City'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Delete a city
      tags:
      - cities
    get:
      consumes:
      - application/json
      - text/xml
      description: Get a city item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: City ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.City'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get a City
      tags:
      - cities
    put:
      consumes:
      - application/json
      - text/xml
      description: Update a city item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: City ID
        in: path
        name: id
        required: true
        type: string
      - description: City Info
        in: body
        name: city
        required: true
        schema:
          $ref: '#/definitions/model.CityInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.City'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Update a city
      tags:
      - cities
  /countries:
    get:
      consumes:
      - application/json
      - text/xml
      description: Get all country items
      parameters:
      - description: mediaType
        enum:
        - xml
        - json
        in: query
        name: mediaType
        type: string
      - description: page
        in: query
        minimum: 1
        name: page
        type: integer
      - description: size
        in: query
        minimum: 1
        name: limit
        type: integer
      - description: countryId
        in: query
        name: countryId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Country'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get all countries
      tags:
      - countries
    post:
      consumes:
      - application/json
      - text/xml
      description: Create a new country item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: New country
        in: body
        name: country
        required: true
        schema:
          $ref: '#/definitions/model.CountryInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Country'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.APIError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Create a country
      tags:
      - countries
  /countries/{id}:
    delete:
      consumes:
      - application/json
      - text/xml
      description: Delete a new country item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: Country ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/model.Country'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Delete a country
      tags:
      - countries
    get:
      consumes:
      - application/json
      - text/xml
      description: Get a country item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: Country ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Country'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get a country
      tags:
      - countries
    put:
      consumes:
      - application/json
      - text/xml
      description: Update a country item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: Country ID
        in: path
        name: id
        required: true
        type: string
      - description: Country Info
        in: body
        name: country
        required: true
        schema:
          $ref: '#/definitions/model.CountryInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Country'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Update a country
      tags:
      - countries
  /movies:
    get:
      consumes:
      - application/json
      - text/xml
      description: Get all movies items
      parameters:
      - description: mediaType
        enum:
        - xml
        - json
        in: query
        name: mediaType
        type: string
      - description: page
        in: query
        minimum: 1
        name: page
        type: integer
      - description: size
        in: query
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Movie'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get all movies
      tags:
      - movies
    post:
      consumes:
      - application/json
      - text/xml
      description: Create a new movie item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: New movie
        in: body
        name: movie
        required: true
        schema:
          $ref: '#/definitions/model.MovieInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Movie'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.APIError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Create a movie
      tags:
      - movies
  /movies/{id}:
    delete:
      consumes:
      - application/json
      - text/xml
      description: Delete a new movie item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: Movie ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/model.Movie'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Delete a movie
      tags:
      - movies
    get:
      consumes:
      - application/json
      - text/xml
      description: Get a movie item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: Movie ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Movie'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get a movie
      tags:
      - movies
    put:
      consumes:
      - application/json
      - text/xml
      description: Update a movie item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: Movie ID
        in: path
        name: id
        required: true
        type: string
      - description: Movie Info
        in: body
        name: movie
        required: true
        schema:
          $ref: '#/definitions/model.MovieInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Movie'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Update a movie
      tags:
      - movies
  /signin:
    post:
      consumes:
      - application/json
      - text/xml
      description: Authenticate a user item
      parameters:
      - description: mediaType
        enum:
        - xml
        - json
        in: query
        name: mediaType
        type: string
      - description: SignIn
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.SignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      summary: Authenticate User
      tags:
      - users
  /signup:
    post:
      consumes:
      - application/json
      - text/xml
      description: Create a new user item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: New User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.APIError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      summary: Create a user
      tags:
      - users
  /states:
    get:
      consumes:
      - application/json
      - text/xml
      description: Get all states items
      parameters:
      - description: mediaType
        enum:
        - xml
        - json
        in: query
        name: mediaType
        type: string
      - description: page
        in: query
        minimum: 1
        name: page
        type: integer
      - description: size
        in: query
        minimum: 1
        name: limit
        type: integer
      - description: countryId
        in: query
        name: countryId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.State'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get all states
      tags:
      - states
    post:
      consumes:
      - application/json
      - text/xml
      description: Create a new states item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: New states
        in: body
        name: states
        required: true
        schema:
          $ref: '#/definitions/model.StateInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.State'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.APIError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Create a states
      tags:
      - states
  /states/{id}:
    delete:
      consumes:
      - application/json
      - text/xml
      description: Delete a new states item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: State ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/model.State'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Delete a states
      tags:
      - states
    get:
      consumes:
      - application/json
      - text/xml
      description: Get a states item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: State ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.State'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get a states
      tags:
      - states
    put:
      consumes:
      - application/json
      - text/xml
      description: Update a state item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: State ID
        in: path
        name: id
        required: true
        type: string
      - description: State Info
        in: body
        name: state
        required: true
        schema:
          $ref: '#/definitions/model.StateInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.State'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Update a state
      tags:
      - states
  /tweets:
    get:
      consumes:
      - application/json
      - text/xml
      description: Get all tweet items
      parameters:
      - description: mediaType
        enum:
        - xml
        - json
        in: query
        name: mediaType
        type: string
      - description: page
        in: query
        minimum: 1
        name: page
        type: integer
      - description: size
        in: query
        minimum: 1
        name: limit
        type: integer
      - description: userId
        in: query
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Tweet'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get all tweets
      tags:
      - tweets
    post:
      consumes:
      - application/json
      - text/xml
      description: Create a new tweet item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: New tweet
        in: body
        name: tweet
        required: true
        schema:
          $ref: '#/definitions/model.TweetInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Tweet'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.APIError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Create a tweet
      tags:
      - tweets
  /tweets/{id}:
    delete:
      consumes:
      - application/json
      - text/xml
      description: Delete a new tweet item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: Tweet ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/model.Tweet'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Delete a tweet
      tags:
      - tweets
    get:
      consumes:
      - application/json
      - text/xml
      description: Get a tweet item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: Tweet ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Tweet'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get a tweet
      tags:
      - tweets
  /users:
    get:
      consumes:
      - application/json
      - text/xml
      description: Get all user items
      parameters:
      - description: mediaType
        enum:
        - xml
        - json
        in: query
        name: mediaType
        type: string
      - description: page
        in: query
        minimum: 1
        name: page
        type: integer
      - description: size
        in: query
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get all users
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      - text/xml
      description: Delete a new user item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/model.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      - text/xml
      description: Get a user item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get a user
      tags:
      - users
    put:
      consumes:
      - application/json
      - text/xml
      description: Update a user item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User Info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Update a user
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
